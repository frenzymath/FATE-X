import Mathlib

section

open CategoryTheory Abelian

variable {R : Type} [CommRing R]

instance : CategoryTheory.HasExt.{0} (ModuleCat.{0} R) :=
  CategoryTheory.hasExt_of_enoughProjectives (ModuleCat R)

noncomputable def moduleDepth (N M : ModuleCat.{0} R) : ℕ∞ :=
  sSup {n : ℕ∞ | ∀ i : ℕ, i < n → Subsingleton (CategoryTheory.Abelian.Ext.{0} N M i)}

noncomputable def Ideal.depth (I : Ideal R) (M : ModuleCat.{0} R) : ℕ∞ :=
  moduleDepth (ModuleCat.of R (R ⧸ I)) M

noncomputable def IsLocalRing.depth [IsLocalRing R] (M : ModuleCat.{0} R) : ℕ∞ :=
  (IsLocalRing.maximalIdeal R).depth M

variable (R)

class IsCohenMacaulayLocalRing : Prop extends IsLocalRing R where
  depth_eq_dim : ringKrullDim R = IsLocalRing.depth (ModuleCat.of R R)

class IsCohenMacaulayRing : Prop where
  CM_localize : ∀ p : Ideal R, ∀ (_ : p.IsPrime), IsCohenMacaulayLocalRing (Localization.AtPrime p)

end

open MvPolynomial

abbrev target_ring_aux (k : Type) [Field k] :=
    (MvPolynomial (Fin 6) k) ⧸ Ideal.span ({
    X 1 * X 3 + X 2 * X 5, X 2 * X 4 + X 0 * X 5, X 0 * X 1 - X 1 * X 4 + X 2 * X 4 - X 4 * X 5,
    X 1 * X 2 + X 1 * X 3 + X 1 * X 5 + (X 5)^2, (X 2)^2 + X 2 * X 3 + X 2 * X 5 - X 3 * X 5,
    X 0 * X 2 + X 0 * X 3 + X 3 * X 4 + X 0 * X 5} : Set (MvPolynomial (Fin 6) k))

/--
Consider the ideal \( I \subset k[x_1, \dots, x_6] \) generated by the following polynomials:
\[
\begin{aligned}
f_1 &= x_2x_4 + x_3x_6, \\
f_2 &= x_3x_5 + x_1x_6, \\
f_3 &= x_1x_2 - x_2x_5 + x_3x_5 - x_5x_6, \\
f_4 &= x_2x_3 + x_2x_4 + x_2x_6 + x_6^2, \\
f_5 &= x_3^2 + x_3x_4 + x_3x_6 - x_4x_6, \\
f_6 &= x_1x_3 + x_1x_4 + x_4x_5 + x_1x_6.
\end{aligned}
\]
Prove that \( R/I \) is Cohen–Macaulay of dimension \( 3 \).
-/
theorem isCohenMacaulayRing_of_dimension_three (k : Type) [Field k] :
    IsCohenMacaulayRing (target_ring_aux k) ∧ (ringKrullDim (target_ring_aux k) = 3) := by
  sorry
